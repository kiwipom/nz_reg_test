<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="18" failures="16" errors="0" time="0.097431156">
    <testsuite name="src/services/__tests__/registrationService.test.ts" timestamp="2025-07-16T18:27:34.129Z" hostname="FMNZ-C02D5HB1ML7H.local" tests="18" failures="16" errors="0" skipped="0" time="0.097431156">
        <testcase classname="src/services/__tests__/registrationService.test.ts" name="RegistrationService &gt; checkNameAvailability &gt; returns availability status for valid name" time="0.022041954">
            <failure message="HTTP error! status: 404" type="Error">
Error: HTTP error! status: 404
 ❯ RegistrationService.checkNameAvailability src/services/registrationService.ts:28:13
 ❯ src/services/__tests__/registrationService.test.ts:23:22
            </failure>
        </testcase>
        <testcase classname="src/services/__tests__/registrationService.test.ts" name="RegistrationService &gt; checkNameAvailability &gt; handles special characters in company name" time="0.004310005">
            <failure message="HTTP error! status: 404" type="Error">
Error: HTTP error! status: 404
 ❯ RegistrationService.checkNameAvailability src/services/registrationService.ts:28:13
 ❯ src/services/__tests__/registrationService.test.ts:37:22
            </failure>
        </testcase>
        <testcase classname="src/services/__tests__/registrationService.test.ts" name="RegistrationService &gt; checkNameAvailability &gt; throws error on HTTP error response" time="0.009700561">
            <failure message="expected [Function] to throw error including &apos;HTTP error! status: 500&apos; but got &apos;HTTP error! status: 404&apos;" type="AssertionError">
AssertionError: expected [Function] to throw error including &apos;HTTP error! status: 500&apos; but got &apos;HTTP error! status: 404&apos;

Expected: &quot;HTTP error! status: 500&quot;
Received: &quot;HTTP error! status: 404&quot;

 ❯ src/services/__tests__/registrationService.test.ts:51:7
            </failure>
        </testcase>
        <testcase classname="src/services/__tests__/registrationService.test.ts" name="RegistrationService &gt; checkNameAvailability &gt; throws error on network failure" time="0.004295101">
            <failure message="expected [Function] to throw error including &apos;Network error&apos; but got &apos;HTTP error! status: 404&apos;" type="AssertionError">
AssertionError: expected [Function] to throw error including &apos;Network error&apos; but got &apos;HTTP error! status: 404&apos;

Expected: &quot;Network error&quot;
Received: &quot;HTTP error! status: 404&quot;

 ❯ src/services/__tests__/registrationService.test.ts:59:7
            </failure>
        </testcase>
        <testcase classname="src/services/__tests__/registrationService.test.ts" name="RegistrationService &gt; checkNumberAvailability &gt; returns availability status for valid number" time="0.004334096">
            <failure message="HTTP error! status: 404" type="Error">
Error: HTTP error! status: 404
 ❯ RegistrationService.checkNumberAvailability src/services/registrationService.ts:40:13
 ❯ src/services/__tests__/registrationService.test.ts:72:22
            </failure>
        </testcase>
        <testcase classname="src/services/__tests__/registrationService.test.ts" name="RegistrationService &gt; checkNumberAvailability &gt; handles special characters in company number" time="0.003631756">
            <failure message="HTTP error! status: 404" type="Error">
Error: HTTP error! status: 404
 ❯ RegistrationService.checkNumberAvailability src/services/registrationService.ts:40:13
 ❯ src/services/__tests__/registrationService.test.ts:86:22
            </failure>
        </testcase>
        <testcase classname="src/services/__tests__/registrationService.test.ts" name="RegistrationService &gt; checkNumberAvailability &gt; throws error on HTTP error response" time="0.002897797">
            <failure message="expected [Function] to throw error including &apos;HTTP error! status: 400&apos; but got &apos;HTTP error! status: 404&apos;" type="AssertionError">
AssertionError: expected [Function] to throw error including &apos;HTTP error! status: 400&apos; but got &apos;HTTP error! status: 404&apos;

Expected: &quot;HTTP error! status: 400&quot;
Received: &quot;HTTP error! status: 404&quot;

 ❯ src/services/__tests__/registrationService.test.ts:100:7
            </failure>
        </testcase>
        <testcase classname="src/services/__tests__/registrationService.test.ts" name="RegistrationService &gt; registerCompany &gt; registers company successfully with authentication" time="0.00562019">
            <failure message="expected &quot;spy&quot; to be called with arguments: [ …(2) ][90m

Number of calls: [1m0[22m
[39m" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called with arguments: [ …(2) ]

Number of calls: 0

 ❯ src/services/__tests__/registrationService.test.ts:132:25
            </failure>
        </testcase>
        <testcase classname="src/services/__tests__/registrationService.test.ts" name="RegistrationService &gt; registerCompany &gt; registers company successfully without authentication" time="0.004324887">
            <failure message="expected &quot;spy&quot; to be called with arguments: [ …(2) ][90m

Number of calls: [1m0[22m
[39m" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called with arguments: [ …(2) ]

Number of calls: 0

 ❯ src/services/__tests__/registrationService.test.ts:154:25
            </failure>
        </testcase>
        <testcase classname="src/services/__tests__/registrationService.test.ts" name="RegistrationService &gt; registerCompany &gt; registers company without optional NZBN" time="0.00383396">
            <failure message="expected &quot;spy&quot; to be called with arguments: [ …(2) ][90m

Number of calls: [1m0[22m
[39m" type="AssertionError">
AssertionError: expected &quot;spy&quot; to be called with arguments: [ …(2) ]

Number of calls: 0

 ❯ src/services/__tests__/registrationService.test.ts:180:25
            </failure>
        </testcase>
        <testcase classname="src/services/__tests__/registrationService.test.ts" name="RegistrationService &gt; registerCompany &gt; throws error on HTTP error response" time="0.006249388">
            <failure message="promise resolved &quot;{ id: 3, …(5) }&quot; instead of rejecting" type="AssertionError">
AssertionError: promise resolved &quot;{ id: 3, …(5) }&quot; instead of rejecting

- Expected
+ Received

- Error {
-   &quot;message&quot;: &quot;rejected promise&quot;,
+ {
+   &quot;companyName&quot;: &quot;Test Company Ltd&quot;,
+   &quot;companyNumber&quot;: &quot;1234567&quot;,
+   &quot;companyType&quot;: &quot;LTD&quot;,
+   &quot;id&quot;: 3,
+   &quot;incorporationDate&quot;: &quot;2024-01-01&quot;,
+   &quot;nzbn&quot;: &quot;1234567890123&quot;,
  }

 ❯ src/services/__tests__/registrationService.test.ts:201:74
            </failure>
        </testcase>
        <testcase classname="src/services/__tests__/registrationService.test.ts" name="RegistrationService &gt; registerCompany &gt; throws error on network failure" time="0.003443433">
            <failure message="promise resolved &quot;{ id: 3, …(5) }&quot; instead of rejecting" type="AssertionError">
AssertionError: promise resolved &quot;{ id: 3, …(5) }&quot; instead of rejecting

- Expected
+ Received

- Error {
-   &quot;message&quot;: &quot;rejected promise&quot;,
+ {
+   &quot;companyName&quot;: &quot;Test Company Ltd&quot;,
+   &quot;companyNumber&quot;: &quot;1234567&quot;,
+   &quot;companyType&quot;: &quot;LTD&quot;,
+   &quot;id&quot;: 3,
+   &quot;incorporationDate&quot;: &quot;2024-01-01&quot;,
+   &quot;nzbn&quot;: &quot;1234567890123&quot;,
  }

 ❯ src/services/__tests__/registrationService.test.ts:209:74
            </failure>
        </testcase>
        <testcase classname="src/services/__tests__/registrationService.test.ts" name="RegistrationService &gt; registerCompany &gt; handles unauthorized access" time="0.010382748">
            <failure message="promise resolved &quot;{ id: 3, …(5) }&quot; instead of rejecting" type="AssertionError">
AssertionError: promise resolved &quot;{ id: 3, …(5) }&quot; instead of rejecting

- Expected
+ Received

- Error {
-   &quot;message&quot;: &quot;rejected promise&quot;,
+ {
+   &quot;companyName&quot;: &quot;Test Company Ltd&quot;,
+   &quot;companyNumber&quot;: &quot;1234567&quot;,
+   &quot;companyType&quot;: &quot;LTD&quot;,
+   &quot;id&quot;: 3,
+   &quot;incorporationDate&quot;: &quot;2024-01-01&quot;,
+   &quot;nzbn&quot;: &quot;1234567890123&quot;,
  }

 ❯ src/services/__tests__/registrationService.test.ts:221:77
            </failure>
        </testcase>
        <testcase classname="src/services/__tests__/registrationService.test.ts" name="RegistrationService &gt; generateCompanyNumber &gt; generates a 9-digit company number" time="0.00066446">
        </testcase>
        <testcase classname="src/services/__tests__/registrationService.test.ts" name="RegistrationService &gt; generateCompanyNumber &gt; generates unique company numbers" time="0.001827882">
            <failure message="expected 92 to be 100 // Object.is equality" type="AssertionError">
AssertionError: expected 92 to be 100 // Object.is equality

- Expected
+ Received

- 100
+ 92

 ❯ src/services/__tests__/registrationService.test.ts:242:28
            </failure>
        </testcase>
        <testcase classname="src/services/__tests__/registrationService.test.ts" name="RegistrationService &gt; generateCompanyNumber &gt; generates numbers with timestamp component" time="0.000502042">
        </testcase>
        <testcase classname="src/services/__tests__/registrationService.test.ts" name="RegistrationService &gt; error handling &gt; handles malformed JSON response" time="0.003083471">
            <failure message="expected [Function] to throw error including &apos;Invalid JSON&apos; but got &apos;HTTP error! status: 404&apos;" type="AssertionError">
AssertionError: expected [Function] to throw error including &apos;Invalid JSON&apos; but got &apos;HTTP error! status: 404&apos;

Expected: &quot;Invalid JSON&quot;
Received: &quot;HTTP error! status: 404&quot;

 ❯ src/services/__tests__/registrationService.test.ts:269:7
            </failure>
        </testcase>
        <testcase classname="src/services/__tests__/registrationService.test.ts" name="RegistrationService &gt; error handling &gt; handles empty response" time="0.002010701">
            <failure message="HTTP error! status: 404" type="Error">
Error: HTTP error! status: 404
 ❯ RegistrationService.checkNameAvailability src/services/registrationService.ts:28:13
 ❯ src/services/__tests__/registrationService.test.ts:280:22
            </failure>
        </testcase>
    </testsuite>
</testsuites>
